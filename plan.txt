=== THE GRAND PLAN ===

Let's see if I can get this to something

- Accounts
	- name, picture, bio, etc.
	- email
	- properties
		- tags that define interests("sporting", "programming", "painting")
		- badges that define the persons special properties("Director", "Founder")
		- should all be JSON

- If someone has an idea, it can just select a property and send it to all people with that
  property via email(or something).
	- Example: James wants to do a day of pizza baking, it just creates a message and
	  just sends it to all people with the tag "cooking"

- You can create events, and let people now based on properties
	- private, public

- Or you can just send messages, based on people or property

0  tags and badges, choose between tag and badge
	o A tag is something you like, like cookingS
	o And a badge is something you "earn" or "am", like being a teacher or a student




- Table of user indexes(ind_users)
	[] id -> users[id]
	[] name -> username

- Table of users
	[]	id
	[]	data
		[] admin(optional)
			o if this is set, you're an admin, which means that you can do anything
			  when you login, session variable uadmin will be set to true
		[] profile
			[] username
			[] name
			[] password
				o SHA512 one-way encrypted
			[] email
			[] picture_url
			[] bio
		[] properties (optional)
			o here you can give this user additional properties that are not linked anywhere.
Imported as class User


- Table of users and properties linkage(usr_prop)
	[] uid
	[] pid

	- if you add a property to a user, you just check if it already exist
	- add a relation for easy deleting
	- you can easially select certain stuff


- Table of properties
	[] id
	[] data
		[] property - this is what gets saved on someone's profile
		[] type(tag or badge)
		[] name
		[] description
		[] CSS (optional) - contents described here just stored in JSON, not in-sub object
				[] css - the css class, *contents* of css class
					o auto-generated classname, on page load? At least not static.
				[] cssclass
					o classname
 
Imported as class Property

- Table of events
	[] id
	[] data(json)
		[] name
		[] description
		[] status
		[] scheduled_time

- Table of event and property linking(evnt_prop)
	[] eid
	[] pid

- Table of event and organisator linking(evnt_organisator)
	[] eid
	[] uid
	- organisators have access to the event to edit or modify it
	if you create an event, you're automatically an organisator

TODO:
- Think about events: how about "urgent" ones and long period ones?
	[] participate button?
- navbarry
- explorer page

- Make code pretty!
- Error checking!
- FIX CSS GENERATION
- Events!
- Get rid of css generator?
- property additional html?

selectsize?
